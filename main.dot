digraph fairness {
    node [shape=box];
    discrimination [ label="discriminar" ];
    classifier [ label="clasificador" ];
    justified_discrimination [ label="diferenciación justificada" ]
    unjustified_discrimination [ label="diferenciación no justificada" ]
    protected_classes [ label="clases protegidas" ]
    arg_law [ label="ley argentina" ]
    usa_law [ label="ley estados unidos" ]
    disparate_treatment [ label="tratamiento desparejo" ]
    disparate_impact [ label="impacto desparejo" ]
    treat_similarly_disimilar_people_because_of_past_injustice [ label="tratar igual gente distinta por pasadas injusticias" ]
    impact_treatment_tension[ label="tension" shape="circle" ]
    firefighter_connecticut [ label="bomberos en Connecticut" shape="polygon" sides="8" ]
    ut_10percent_rule [ label="UT 10% rule" shape="polygon" sides="8" ]
    california_ban_iq_test [ label="California no permite tests de IQ" shape="polygon" sides="8" ]
    stem_ad [ label="publicidad de STEM menos mostrada a mujeres" shape="polygon" sides="8" ]

    // a survey on bias and fairness in Machine Learning, mehrabi
    bias_in_data [ label="bias in data" ]
    calories_bmi [ label="calories vs BMI" shape="polygon" sides="8" ]

    discrimination->classifier [ dir=both ]
    discrimination->unjustified_discrimination
    classifier->justified_discrimination
    justified_discrimination->protected_classes
    unjustified_discrimination->protected_classes
    unjustified_discrimination->usa_law
    unjustified_discrimination->arg_law
    usa_law->firefighter_connecticut
    discrimination->disparate_treatment
    discrimination->disparate_impact
    disparate_impact->impact_treatment_tension->disparate_treatment [ dir=none maxlen=0.1 ]
    impact_treatment_tension->firefighter_connecticut
    impact_treatment_tension->ut_10percent_rule
    impact_treatment_tension->california_ban_iq_test
    impact_treatment_tension->treat_similarly_disimilar_people_because_of_past_injustice
    impact_treatment_tension->stem_ad

    discrimination->bias_in_data
    bias_in_data->calories_bmi
}

/*
no discriminación narrow: treat similar people similarly
broad: equal oportunity if equally talented and ambitious
in between: treat similarly disimilar people similarly becuase they look disimilar because of a past injustice (e.g.: born poor)

black names 50% less callback chances in cv
bias training doesn't work, formalize decision making does

ML can help formilizing

discovering differences:
* skewed sample (e.g.: policing in dangerous neighbourhood), feedback loop
* tainted examples, biased labels (e.g.: manager performance reviews)

coping with differences:
* limited features (e.g.: less reliable for minority)
* sample size disparity, minority may be a small % and may not affect metrics (e.g.: accuracy) significantly

understading disparity:
* relevant proxies (with rich data membership cannot be avoidable)

disparate impact may be justified by ML, but it would not be acceptable

# techniques used

independence: C ind A
separation: C ind A cond Y
sufficiency: Y ind A cond C


## independence

same acceptance rate (demographic parity, statistical parity)}
one way to approach: representation learning, learn to maximize result while minimizing the difference in an intermediate representation
shortcoming:
* ignores correlation between the target var and the sensitive attr
* sensitive to sample size disparity
desirable long term goal

## separation

mismo TPR/FPR
ROC de ambos grupo establecen la frontera

## sufficiency
calibrar cada grupo para poder obtener una probabilidad

# Todos los pares son mutuamente excluyentes

?

# Incluso haciendo estas cosas se puede mantener el sesgo

https://pubsonline.informs.org/doi/10.1287/mnsc.2018.3093

a survey on bias and fairness in Machine Learning, mehrabi
ejemplo de bias en data, calorías vs bmi
muchos tipos de biases
group granularity trade (142)
definiciones de fairness (mismas chances, mismas oportunidades, pridad demográfica, etc) (123)
puede ser dañino (80)
pre/in/post processing

fairness in criminal Justice risk assessments
definiciones de fairness en una matriz de confusión
imposibilidades de lograr
*/

/*
digraph g {
graph [
rankdir = "LR"
bgcolor = "white:lightblue"
style="filled"
gradientangle = 270];
node [
fontsize = "16"
shape = "ellipse"
style="filled"
gradientangle=90
];
edge [
];
"node0" [
label = "<f0> 0x10ba8| <f1>"
shape = "record"
gradientangle="90"
fillcolor = "yellow:blue"
];
"node1" [
label = "<f0> 0xf7fc4380| <f1> | <f2> |-1"
shape = "record"
fillcolor = "blue:red"
gradientangle = 0
];
"node2" [
label = "<f0> 0xf7fc44b8| | |2"
shape = "record"
fillcolor = "brown:yellow"
gradientangle = 90
];
"node3" [
label = "<f0> 3.43322790286038071e-06|44.79998779296875|0 | <f1>"
shape = "record"
fillcolor = "green:red"
gradientangle = 90
];
"node4" [
label = "<f0> 0xf7fc4380| <f1> | <f2> |2"
shape = "record"
fillcolor = "red:green"
gradientangle = 0
];
"node5" [
label = "<f0> (nil)| | |-1"
shape = "record"
fillcolor = "red:red"
gradientangle = 90
];
"node6" [
label = "<f0> 0xf7fc4380| <f1> | <f2> |1"
shape = "record"
fillcolor = "orange:green"
];
"node7" [
label = "<f0> 0xf7fc4380| <f1> | <f2> |2"
shape = "record"
fillcolor = "cyan:green"
];
"node8" [
label = "<f0> (nil)| | |-1"
shape = "record"
fillcolor = "cyan:cyan"
];
"node9" [
label = "<f0> (nil)| | |-1"
shape = "record"
fillcolor = "orange:orange"
gradientangle = 90
];
"node10" [
label = "<f0> (nil)| <f1> | <f2> |-1"
shape = "record"
fillcolor = "magenta:green"
];
"node11" [
label = "<f0> (nil)| <f1> | <f2> |-1"
shape = "record"
fillcolor = "red:green"
];
"node12" [
label = "<f0> 0xf7fc43e0| | |1"
shape = "record"
fillcolor = "magenta:magenta"
];
"node0":f0 -> "node1":f0 [
id = 0
];
"node0":f1 -> "node2":f0 [
id = 1
];
"node1":f0 -> "node3":f0 [
id = 2
];
"node1":f1 -> "node4":f0 [
id = 3
];
"node1":f2 -> "node5":f0 [
id = 4
];
"node4":f0 -> "node3":f1 [
id = 5
];
"node4":f1 -> "node6":f0 [
id = 6
];
"node4":f2 -> "node10":f0 [
id = 7
];
"node6":f0 -> "node3":f1 [
id = 8
];
"node6":f1 -> "node7":f0 [
id = 9
];
"node6":f2 -> "node9":f0 [
id = 10
];
"node7":f0 -> "node3":f1 [
id = 11
];
"node7":f1 -> "node1":f0 [
id = 12
];
"node7":f2 -> "node8":f0 [
id = 13
];
"node10":f1 -> "node11":f0 [
id = 14
];
"node10":f2 -> "node12":f0 [
id = 15
];
"node11":f2 -> "node1":f0 [
id = 16
];
}
*/
